.TH _printf 3 "26 November 2024" "1.0" "Library Function Manual"
.SH NAME
_printf \- produce output according to a format
.SH LIBRARY
Standard C Library (libc, -lc)
.SH SYNOPSIS
#include "main.h"


.BI "int _printf(const char *" format ", ...);"
.SH DESCRIPTION
.B _printf
produces output according to a format as described below. The function writes the output to stdout.
.PP
The format string is composed of zero or more directives: ordinary characters (except %) which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the % character.
.SH PARAMETERS
.TP
.B format
This is the format string containing the text to be written to stdout. It can optionally contain embedded format specifiers that are replaced by the values specified in subsequent additional arguments and formatted as requested.
.TP
.B ...
The additional arguments specifying the data to be printed. These arguments must match the format specifiers in the format string.
.SH RETURN VALUE
.B _printf
returns the number of characters printed (excluding the null byte used to end output to strings). If an output error is encountered, a negative value is returned.
.SH FORMAT SPECIFIERS
The following format specifiers are supported:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string of characters.
.TP
.B %%
Prints a percent sign.
.TP
.B %d, %i
Prints an integer in base 10.
.TP
.B %r
Prints a strings of characters in reverse.
.TP
.B %u
Prints an unsigned integer in base 10.
.TP
.B %o
Prints an integer in base 8.
.TP
.B %x
Prints an integer in base 16 (lowercase).
.TP
.B %X
Prints an integer in base 16 (uppercase).
.SH EXAMPLES
.nf
#include "main.h"
int main(void)
.B {
    _printf("Character: %c\\n", 'A');
    _printf("String: %s\\n", "Hello, World!");
    _printf("Percent sign: %%\\n");
    _printf("Integer: %d\\n", 123);
    _printf("Reverse: %r\\n"), "Hello";
    _printf("Unsigned: %u\\n", 123);
    _printf("Octal: %o\\n", 123);
    _printf("Hexadecimal: %x\\n", 123);
    _printf("HEX: %X\\n", 123);
    return (0);
.B }
.fi
.SH SEE ALSO
.BR printf (3)
.SH BUGS
_printf don't handle flags, fied width, precision and length modifiers.
.SH AUTHORS
SÃ©bastien Georgescu
.br
Esteban Cratere
.br
